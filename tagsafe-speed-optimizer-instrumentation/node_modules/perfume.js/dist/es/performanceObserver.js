import { C } from './constants';
import { perfObservers } from './observeInstances';
/**
 * PerformanceObserver subscribes to performance events as they happen
 * and respond to them asynchronously.
 */
export var po = function (eventType, cb) {
    try {
        var perfObserver = new PerformanceObserver(function (entryList) {
            cb(entryList.getEntries());
        });
        // Retrieve buffered events and subscribe to newer events for Paint Timing
        perfObserver.observe({ type: eventType, buffered: true });
        return perfObserver;
    }
    catch (e) {
        C.warn('Perfume.js:', e);
    }
    return null;
};
export var poDisconnect = function (observer) {
    if (perfObservers[observer]) {
        perfObservers[observer].disconnect();
    }
    delete perfObservers[observer];
};
//# sourceMappingURL=performanceObserver.js.map