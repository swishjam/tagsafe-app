import { config } from './config';
import { fcp, rt, tbt } from './metrics';
import { perfObservers } from './observeInstances';
import { po } from './performanceObserver';
import { reportPerf } from './reportPerf';
import { initTotalBlockingTime } from './totalBlockingTime';
import { roundByFour } from './utils';
import { getVitalsScore } from './vitalsScore';
export var logData = function (measureName, metric, attribution) {
    Object.keys(metric).forEach(function (key) {
        if (typeof metric[key] === 'number') {
            metric[key] = roundByFour(metric[key]);
        }
    });
    // Sends the metric to an external tracking service
    reportPerf(measureName, metric, null, attribution || {});
};
/**
 * Dispatches the metric duration into internal logs
 * and the external time tracking service.
 */
export var logMetric = function (_a) {
    var attribution = _a.attribution, name = _a.name, rating = _a.rating, value = _a.value;
    // TODO Add docs
    if (name === 'FCP') {
        fcp.value = value;
    }
    // TODO Add docs
    if (['FCP', 'LCP'].includes(name)) {
        perfObservers[4] = po('longtask', initTotalBlockingTime);
    }
    // TODO Add docs
    if ('FID' === name) {
        setTimeout(function () {
            logMetric({
                attribution: attribution,
                name: 'TBT',
                rating: getVitalsScore('TBT', tbt.value),
                value: tbt.value,
            });
            logData('dataConsumption', rt.value);
        }, 10000);
    }
    // TODO Add docs
    var duration2Decimal = roundByFour(value);
    if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {
        // Sends the metric to an external tracking service
        reportPerf(name, duration2Decimal, rating, attribution);
    }
};
//# sourceMappingURL=log.js.map