"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.disconnectPerfObserversHidden = exports.initPerformanceObserver = void 0;
var attribution_1 = require("web-vitals/attribution");
var config_1 = require("./config");
var element_timing_1 = require("./element-timing");
var log_1 = require("./log");
var performanceObserver_1 = require("./performanceObserver");
var resourceTiming_1 = require("./resourceTiming");
var initPerformanceObserver = function () {
    // @ts-ignore
    (0, attribution_1.onTTFB)(function (report) {
        // Calculate the request time by subtracting from TTFB
        // everything that happened prior to the request starting.
        // @ts-ignore
        report.value = report.value - report.entries[0].requestStart;
        // @ts-ignore
        (0, log_1.logMetric)(report);
    });
    // @ts-ignore
    (0, attribution_1.onCLS)(function (report) { return (0, log_1.logMetric)(report); });
    // @ts-ignore
    (0, attribution_1.onFCP)(function (report) { return (0, log_1.logMetric)(report); });
    // @ts-ignore
    (0, attribution_1.onFID)(function (report) { return (0, log_1.logMetric)(report); });
    // @ts-ignore
    (0, attribution_1.onLCP)(function (report) { return (0, log_1.logMetric)(report); });
    // @ts-ignore
    (0, attribution_1.onINP)(function (report) { return (0, log_1.logMetric)(report); });
    if (config_1.config.isResourceTiming) {
        (0, performanceObserver_1.po)('resource', resourceTiming_1.initResourceTiming);
    }
    if (config_1.config.isElementTiming) {
        (0, performanceObserver_1.po)('element', element_timing_1.initElementTiming);
    }
};
exports.initPerformanceObserver = initPerformanceObserver;
var disconnectPerfObserversHidden = function () {
    // TODO: Use if need it
};
exports.disconnectPerfObserversHidden = disconnectPerfObserversHidden;
//# sourceMappingURL=observe.js.map