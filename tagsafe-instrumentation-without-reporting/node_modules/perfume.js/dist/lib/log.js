"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logMetric = exports.logData = void 0;
var config_1 = require("./config");
var metrics_1 = require("./metrics");
var observeInstances_1 = require("./observeInstances");
var performanceObserver_1 = require("./performanceObserver");
var reportPerf_1 = require("./reportPerf");
var totalBlockingTime_1 = require("./totalBlockingTime");
var utils_1 = require("./utils");
var vitalsScore_1 = require("./vitalsScore");
var logData = function (measureName, metric, attribution) {
    Object.keys(metric).forEach(function (key) {
        if (typeof metric[key] === 'number') {
            metric[key] = (0, utils_1.roundByFour)(metric[key]);
        }
    });
    // Sends the metric to an external tracking service
    (0, reportPerf_1.reportPerf)(measureName, metric, null, attribution || {});
};
exports.logData = logData;
/**
 * Dispatches the metric duration into internal logs
 * and the external time tracking service.
 */
var logMetric = function (_a) {
    var attribution = _a.attribution, name = _a.name, rating = _a.rating, value = _a.value;
    // TODO Add docs
    if (name === 'FCP') {
        metrics_1.fcp.value = value;
    }
    // TODO Add docs
    if (['FCP', 'LCP'].includes(name)) {
        observeInstances_1.perfObservers[4] = (0, performanceObserver_1.po)('longtask', totalBlockingTime_1.initTotalBlockingTime);
    }
    // TODO Add docs
    if ('FID' === name) {
        setTimeout(function () {
            (0, exports.logMetric)({
                attribution: attribution,
                name: 'TBT',
                rating: (0, vitalsScore_1.getVitalsScore)('TBT', metrics_1.tbt.value),
                value: metrics_1.tbt.value,
            });
            (0, exports.logData)('dataConsumption', metrics_1.rt.value);
        }, 10000);
    }
    // TODO Add docs
    var duration2Decimal = (0, utils_1.roundByFour)(value);
    if (duration2Decimal <= config_1.config.maxTime && duration2Decimal >= 0) {
        // Sends the metric to an external tracking service
        (0, reportPerf_1.reportPerf)(name, duration2Decimal, rating, attribution);
    }
};
exports.logMetric = logMetric;
//# sourceMappingURL=log.js.map