<%= turbo_frame_tag 'functional_test_form' do %>
  <%= form_with model: functional_test, class: 'new-functional-test', data: { controller: 'loading_form' } do |f| %>
    <% if local_assigns[:force_validation_on_submit] %>
      <input type='hidden' name='force_validation' value='true'>
    <% end %>
    <div class='form-floating col-6 offset-3'>
      <%= f.text_field :title, class: 'form-control mt-3', placeholder: 'User can add to cart' %>
      <label for='functional_test_title'>Name of test</label>
    </div>
    <div class='form-floating col-6 offset-3'>
      <%= f.text_field :description, class: 'form-control mt-3', placeholder: 'A user can navigate to the PDP page and add an item to their cart successfully' %>
      <label for='functional_test_description'>Description</label>
    </div>
    <div class='col-10 offset-1'>
      <span class='puppeteer-script-label d-block text-center'>Test script</span>
      <div class="accordion">
        <div class="accordion-item">
          <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#help-content" data-expanded='false' aria-controls="help-content">
              Help
            </button>
          </h2>
          <div id="help-content" class="accordion-collapse collapse">
            <div class="accordion-body text-start">
              <ul>
                <li>Tagsafe runs functional tests against your site with and without the tag in question to ensure the tag does not break any core functionality of your site</li>
                <li>After creating a test, Tagsafe runs a validation to ensure the test is able to pass. Upon the test passing validation, you will be prompted to enable it so that it runs during future audits.</li>
                <li>This script is run within a virtual <a href='https://www.pptr.dev' target='_blank'>Puppeteer</a> script that Tagsafe spins up.</li>
                <li>Your script is scoped with an async function, meaning you can use async/await statements within it.</li>
                <li>Tagsafe exposes some variables and functions to you to use within your scripts such as:</li>
                <li style='margin-left: 15px;'><code>TS.PAGE</code>: the core variable you will use to write your tests with that references the Puppeteer <code>Page</code> instance you will interact with. View <a href='https://pptr.dev/#?product=Puppeteer&version=v13.0.0&show=api-class-page' target='_blank'>Puppeteer's documentation</a> for more information on the various methods and functionality made available by the <code>page</code> variable.</li>
                <li style='margin-left: 15px;'><code>TS.WAIT_FOR_TAG()</code>: often times you'll want to wait for the tag being tested to fully load into the page, otherwise you run the risk of the test running before the tag in question is even on the page. Use this async helper function to wait for the tag to be loaded before your test logic continues.</li>
                <li style='margin-left: 15px;'><code>TS.LOG(msg)</code>: ouput log statements for debugging purposes and provide further context of the various states of your script (ie: <code>LOG(`What is the title of the page at this point? ${await this.page.evaluate(() => document.title)}`)</code></li>
                <!-- <li style='margin-left: 15px;'><code>SCREENSHOT(filename)</code>: take a screenshot at the current point of the script to provide further context of the state of the page's UI.</li> !-->
              </ul>
            </div>
          </div>
        </div>
      </div>
      <div class='code-mirror-container'>
        <div class='outter-code-mirror top'>
          <textarea class='code-mirror-text opening-async-function hidden' data-controller='code-mirror' data-code-mirror-target='codeMirrorTextarea' data-readonly='true' data-disable-line-numbers='true'>(async () => {</textarea>
        </div>
        <div class='user-input-code-mirror'>
          <%= f.text_area :puppeteer_script, class: 'code-mirror-textarea hidden', data: { controller: 'code-mirror', code_mirror_target: 'codeMirrorTextarea', value: "#{functional_test.puppeteer_script || 'await TS.PAGE.goto("https://www.tagsafe.io");\r\nreturn await TS.PAGE.evaluate(() => document.title);'}" } %>
        </div>
        <div class='outter-code-mirror bottom'>
          <textarea class='code-mirror-text closing-async-function  hidden' data-controller='code-mirror' data-code-mirror-target='codeMirrorTextarea' data-readonly='true' data-disable-line-numbers='true'>})();</textarea>
        </div>
      </div>
    </div>
    <div class='form-floating col-6 offset-3'>
      <%= f.text_field :expected_results, class: 'form-control mt-3', placeholder: 'Expected results' %>
      <label for='functional_test_expected_results'>Expected return value of test script</label>
    </div>
    <%= render 'partials/inline_errors', errors: functional_test.errors.full_messages || local_assigns[:errors] %>
    <div class='col-12 text-center mt-3'>
      <%= submit_loading_button 'Run test validation', button_class: 'large' %>
    </div>
  <% end %>
<% end %>
